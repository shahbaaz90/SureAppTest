//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediCareWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.webservicex.net/", ConfigurationName="MediCareWebService.MediCareSupplierSoap")]
    public interface MediCareSupplierSoap
    {
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webservicex.net/GetSupplierByZipCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MediCareWebService.GetSupplierByZipCodeResponse> GetSupplierByZipCodeAsync(MediCareWebService.GetSupplierByZipCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webservicex.net/GetSupplierByCity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MediCareWebService.GetSupplierByCityResponse> GetSupplierByCityAsync(MediCareWebService.GetSupplierByCityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webservicex.net/GetSupplierBySupplyType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MediCareWebService.GetSupplierBySupplyTypeResponse> GetSupplierBySupplyTypeAsync(MediCareWebService.GetSupplierBySupplyTypeRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net/")]
    public partial class SupplierDataList
    {
        
        private SupplierData[] supplierDatasField;
        
        private int totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SupplierData[] SupplierDatas
        {
            get
            {
                return this.supplierDatasField;
            }
            set
            {
                this.supplierDatasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int TotalRecords
        {
            get
            {
                return this.totalRecordsField;
            }
            set
            {
                this.totalRecordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net/")]
    public partial class SupplierData
    {
        
        private string supplierNumberField;
        
        private string companyNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string zipPlus4Field;
        
        private string telephoneField;
        
        private string descriptionField;
        
        private string isSupplierParticipatingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SupplierNumber
        {
            get
            {
                return this.supplierNumberField;
            }
            set
            {
                this.supplierNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CompanyName
        {
            get
            {
                return this.companyNameField;
            }
            set
            {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Address1
        {
            get
            {
                return this.address1Field;
            }
            set
            {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Address2
        {
            get
            {
                return this.address2Field;
            }
            set
            {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string City
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string State
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Zip
        {
            get
            {
                return this.zipField;
            }
            set
            {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ZipPlus4
        {
            get
            {
                return this.zipPlus4Field;
            }
            set
            {
                this.zipPlus4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Telephone
        {
            get
            {
                return this.telephoneField;
            }
            set
            {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string IsSupplierParticipating
        {
            get
            {
                return this.isSupplierParticipatingField;
            }
            set
            {
                this.isSupplierParticipatingField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierByZipCode", WrapperNamespace="http://www.webservicex.net/", IsWrapped=true)]
    public partial class GetSupplierByZipCodeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=0)]
        public string zip;
        
        public GetSupplierByZipCodeRequest()
        {
        }
        
        public GetSupplierByZipCodeRequest(string zip)
        {
            this.zip = zip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierByZipCodeResponse", WrapperNamespace="http://www.webservicex.net/", IsWrapped=true)]
    public partial class GetSupplierByZipCodeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=0)]
        public bool GetSupplierByZipCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=1)]
        public MediCareWebService.SupplierDataList SupplierDataLists;
        
        public GetSupplierByZipCodeResponse()
        {
        }
        
        public GetSupplierByZipCodeResponse(bool GetSupplierByZipCodeResult, MediCareWebService.SupplierDataList SupplierDataLists)
        {
            this.GetSupplierByZipCodeResult = GetSupplierByZipCodeResult;
            this.SupplierDataLists = SupplierDataLists;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierByCity", WrapperNamespace="http://www.webservicex.net/", IsWrapped=true)]
    public partial class GetSupplierByCityRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=0)]
        public string City;
        
        public GetSupplierByCityRequest()
        {
        }
        
        public GetSupplierByCityRequest(string City)
        {
            this.City = City;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierByCityResponse", WrapperNamespace="http://www.webservicex.net/", IsWrapped=true)]
    public partial class GetSupplierByCityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=0)]
        public bool GetSupplierByCityResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=1)]
        public MediCareWebService.SupplierDataList SupplierDataLists;
        
        public GetSupplierByCityResponse()
        {
        }
        
        public GetSupplierByCityResponse(bool GetSupplierByCityResult, MediCareWebService.SupplierDataList SupplierDataLists)
        {
            this.GetSupplierByCityResult = GetSupplierByCityResult;
            this.SupplierDataLists = SupplierDataLists;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierBySupplyType", WrapperNamespace="http://www.webservicex.net/", IsWrapped=true)]
    public partial class GetSupplierBySupplyTypeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=0)]
        public string description;
        
        public GetSupplierBySupplyTypeRequest()
        {
        }
        
        public GetSupplierBySupplyTypeRequest(string description)
        {
            this.description = description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierBySupplyTypeResponse", WrapperNamespace="http://www.webservicex.net/", IsWrapped=true)]
    public partial class GetSupplierBySupplyTypeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=0)]
        public bool GetSupplierBySupplyTypeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.webservicex.net/", Order=1)]
        public MediCareWebService.SupplierDataList SupplierDataLists;
        
        public GetSupplierBySupplyTypeResponse()
        {
        }
        
        public GetSupplierBySupplyTypeResponse(bool GetSupplierBySupplyTypeResult, MediCareWebService.SupplierDataList SupplierDataLists)
        {
            this.GetSupplierBySupplyTypeResult = GetSupplierBySupplyTypeResult;
            this.SupplierDataLists = SupplierDataLists;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface MediCareSupplierSoapChannel : MediCareWebService.MediCareSupplierSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class MediCareSupplierSoapClient : System.ServiceModel.ClientBase<MediCareWebService.MediCareSupplierSoap>, MediCareWebService.MediCareSupplierSoap
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MediCareSupplierSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(MediCareSupplierSoapClient.GetBindingForEndpoint(endpointConfiguration), MediCareSupplierSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediCareSupplierSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MediCareSupplierSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediCareSupplierSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MediCareSupplierSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediCareSupplierSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MediCareWebService.GetSupplierByZipCodeResponse> GetSupplierByZipCodeAsync(MediCareWebService.GetSupplierByZipCodeRequest request)
        {
            return base.Channel.GetSupplierByZipCodeAsync(request);
        }
        
        public System.Threading.Tasks.Task<MediCareWebService.GetSupplierByCityResponse> GetSupplierByCityAsync(MediCareWebService.GetSupplierByCityRequest request)
        {
            return base.Channel.GetSupplierByCityAsync(request);
        }
        
        public System.Threading.Tasks.Task<MediCareWebService.GetSupplierBySupplyTypeResponse> GetSupplierBySupplyTypeAsync(MediCareWebService.GetSupplierBySupplyTypeRequest request)
        {
            return base.Channel.GetSupplierBySupplyTypeAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MediCareSupplierSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.MediCareSupplierSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MediCareSupplierSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://www.webservicex.net/medicareSupplier.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.MediCareSupplierSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://www.webservicex.net/medicareSupplier.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            MediCareSupplierSoap,
            
            MediCareSupplierSoap12,
        }
    }
}
